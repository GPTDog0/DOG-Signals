from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
import asyncio

BOT_TOKEN = "7895470939:AAEFSLYDEbfwWOY3P_j-vmYSsO1LNL8Z5Fk"
ADMIN_ID = 7351552004  # –Ω–∞–ø—Ä–∏–º–µ—Ä 123456789

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –°–ø–∏—Å–æ–∫ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
approved_users = set()


@dp.message_handler(lambda message: "üÜï –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª ID:" in message.text)
async def handle_new_user(message: types.Message):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    parts = message.text.split("ID: ")
    if len(parts) < 2:
        return
    user_id = parts[1].split("\n")[0]

    # –ö–Ω–æ–ø–∫–∏ –æ–¥–æ–±—Ä–∏—Ç—å / –æ—Ç–∫–ª–æ–Ω–∏—Ç—å
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve_{user_id}")],
        [InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"decline_{user_id}")]
    ])

    await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Ö–æ—á–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Å–∏–≥–Ω–∞–ª–∞–º.", reply_markup=keyboard)


@dp.callback_query_handler(lambda c: c.data.startswith("approve_") or c.data.startswith("decline_"))
async def process_approval(callback: types.CallbackQuery):
    action, user_id = callback.data.split("_", 1)

    if action == "approve":
        approved_users.add(user_id)
        await callback.message.edit_text(f"‚úÖ ID {user_id} –æ–¥–æ–±—Ä–µ–Ω!")
        # –û—Ç–ø—Ä–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–∏–≥–Ω–∞–ª–æ–≤ (–µ—Å–ª–∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å –±–æ—Ç)
        try:
            await bot.send_message(user_id, "‚úÖ –í–∞—à ID –æ–¥–æ–±—Ä–µ–Ω! –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –¥–ª—è —Å–∏–≥–Ω–∞–ª–æ–≤: https://—Ç–≤–æ–π-–ª–æ–≥–∏–Ω.github.io/pocket-signals-site/signals.html")
        except:
            pass
    else:
        await callback.message.edit_text(f"‚ùå ID {user_id} –æ—Ç–∫–ª–æ–Ω—ë–Ω.")


@dp.message_handler(commands=["approved"])
async def list_approved(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        return
    if not approved_users:
        await message.answer("–ù–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
    else:
        users = "\n".join(approved_users)
        await message.answer(f"‚úÖ –û–¥–æ–±—Ä–µ–Ω–Ω—ã–µ ID:\n{users}")


if __name__ == "__main__":
    asyncio.run(dp.start_polling(bot))
